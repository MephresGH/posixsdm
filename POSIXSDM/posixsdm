#!/bin/sh
## posixsdm - TTY-based display manager

tty_exit() {
	while read -rp "Do you want to return to the TTY, exit or go to the login menu? ([T]TY/[E]xit/[L]ogin) " tel; do
		case "$tel" in
		[Tt])
			printf "\nExiting to TTY shell...\n"
			exec "$SHELL"
			;;
		[Ee])
			printf "\nExiting to TTY login...\n"
			exit 0
			;;
		[Ll])
			printf "\nReturning to posixsdm login...\n"
			case "$run_once" in
			1) warn_user ;;
			"" | *) check_condition ;;
			esac
			;;
		*) printf "\nError: invalid input\n\n" ;;
		esac
	done
}

run_desktop() {
	# If $desk_env is Wayland, then run Wayland. Otherwise, run Xorg
	# If sx is found, execute Xorg via sx. Otherwise, use startx
	# Read previous input to search for any sessions .desktop files
	# Finally: if nothing is found, warn user
	if [ -f "$ses"/"$wm".desktop ] && [ "$1" ]; then
		case "$desk_env" in
		"Xorg")
			[ -f /usr/bin/startx ] && xstart="startx" || [ -f /usr/bin/sx ] && xstart="sx"
			if [ "$xstart" ]; then
				export XDG_SESSION_TYPE="x11"
			else
				printf "\n\n%sCRITICAL ERROR%s \
				\n%s and %s cannot be run:\nstartx and sx cannot be found \
				\nPlease install startx or sx to fix this issue.\n" "$red" "$normal" "$desk_env" "$wm"
			fi
			;;
		"Wayland") export XDG_SESSION_TYPE="wayland" ;;
		esac
		printf "\nRunning %s\n" "$1"
		$dexec $xstart "$1" $param
	else
		export XDG_SESSION_TYPE="tty"
		printf "\nError: invalid input or .desktop file not found\n"
	fi
}

set_desktop() {
	case "$(find "$ses" -type f | wc -l)" in
	1)
		printf "\nOnly one desktop found"
		run_desktop "$(grep -oP "(?<=Exec=).*" "$ses"/*.desktop)"
		;;
	0)
		printf "\n%sCRITICAL ERROR%s \
		\nNo %s-based environment has been found." "$red" "$normal" "$desk_env"
		read -rp "Press return to go back to the start menu " _
		sdm_greeter
		;;
	*)
		printf "\nEntered %s prompt\n" "$desk_env"
		while read -rp "What ${desk_env} desktop do you want to run? ([V]iew/E[x]it/[INPUT]) " wm; do
			case "$wm" in
			[Vv]) find "$ses" -type f -printf "%f\n" ;;
			[Xx]) tty_exit ;;
			*) run_desktop "$(grep -oP "(?<=Exec=).*" "$ses"/"$wm".desktop)" $param ;;
			esac
		done
		;;
	esac
}

sdm_greeter() {
	clear
	printf "POSIX Shell Display Manager \
	\n\nRecent logins:\n\n%s\n\n" "$(last | head -8)"
	printf "Currently used shell: %s \
	\n\nInstalled desktops:\n\n" "$SHELL"
	find /usr/share/xsessions /usr/share/wayland-sessions -type f
	printf "\n%sNOTE: Only .desktop files that exist can be run.%s\n\n" "$yellow" "$normal"

	while read -rp "Do you want to run an Xorg or Wayland desktop? ([X]org/[W]ayland/[E]xit) " xwe; do
		case "$xwe" in
		[Xx])
			desk_env="Xorg" ses="/usr/share/xsessions"
			set_desktop
			;;
		[Ww])
			desk_env="Wayland" ses="/usr/share/wayland-sessions"
			set_desktop
			;;
		[Ee]) tty_exit ;;
		*) printf "\nError: invalid input\n\n" ;;
		esac
	done
}

warn_user() {
	if [ "$desk_env" ] && [ ! -f "$ses"/"$wm" ]; then
		empty_desk_denv="The specified desktop doesn't exist, and "
	fi

	while :; do
		printf "%sWARNING: %sTTY1 was not detected or a desktop is running.%s\n" "$yellow" "$empty_desk_denv" "$normal"
		read -rp "Do you want to continue? (Y/N) " yn
		case "$yn" in
		[Yy]) case "$wm" in
			"") sdm_greeter ;;
			*) [ "$run_once" ] && sdm_greeter || run_desktop ;;
			esac ;;
		[Nn]) tty_exit ;;
		*) printf "\nError: invalid input\n\n" ;;
		esac
	done
}

check_condition() {
	# If $DISPLAY is empty and TTY1 is detected, then view $wm and run run_desktop()
	# If neither is true, warn the user
	if [ -z "$DISPLAY" ] && [ "$XDG_VTNR" -eq 1 ]; then
		case "$wm" in
		"") sdm_greeter ;;
		*) run_desktop "$runwm" ;;
		esac
	else
		run_once=1 warn_user
	fi
}

# Set variables and parameters for switch statement to handle user input
# Call check_condition() and continue from there
yellow=$(tput setaf 3) red=$(tput setaf 1) normal=$(tput sgr0)
wm="$2" param="$3" help="Options: --run, --xorg, --wayland, --help"
[ "$param" = "" ] && dexec="exec dbus-run-session"

case "$1" in
-[Rr] | --run) check=1 ;;
-[Xx] | --xorg) check=1 desk_env="Xorg" ses="/usr/share/xsessions" ;;
-[Ww] | --wayland) check=1 desk_env="Wayland" ses="/usr/share/wayland-sessions" ;;
-[Hh] | --help) printf "TTY-based display manager written in modern POSIX-compliant Shell \
	\nUsage: posixsdm <option> [...]\n\nOptions: \
	\n-r, --run\t\tRun the script and do a variable check \
	\n-x, --xorg [INPUT] \tRun Xorg-based desktop directly (not recommended) \
	\n-w, --wayland [INPUT]\tRun wayland-based desktop directly (not recommended)\n \
	\n-h, --help\t\tDisplay this help message\n" ;;
"") printf "Error: whitespace detected\nUsage: posixsdm <option> [...]\n%s\n" "$help" ;;
*) printf "Error: %s is not a valid option\nUsage: posixsdm <option> [...]\n%s\n" "$1" "$help" ;;
esac

[ "$ses" ] && runwm=$(grep -oP '(?<=Exec=).*' "$ses"/"$wm".desktop)
[ "$check" ] && check_condition "$runwm"
